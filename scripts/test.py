import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
import tensorflow as tf



array

data = pd.DataFrame(array)
x = data.iloc[:, :4].values
y = data.iloc[:, -1].values
y = tf.keras.utils.to_categorical(y, num_classes=4)


x_train, x_test, y_train, y_test = train_test_split(x,y, test_size=0.1, random_state=0)



ann = tf.keras.models.Sequential()
ann.add(tf.keras.layers.Dense(units=6, activation='relu'))
ann.add(tf.keras.layers.Dense(units=6, activation='relu'))
ann.add(tf.keras.layers.Dense(units=4, activation='softmax'))

ann.compile(optimizer=tf.keras.optimizers.Adam(learning_rate=0.002), loss = 'categorical_crossentropy' , metrics = ['accuracy'])

ann.fit(x_train, y_train, batch_size = 32, epochs = 1500)

result = ann.predict(np.array([[1, 0, 0, 0,]]))
print(result)